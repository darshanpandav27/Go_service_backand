let profile,multer,CustomErrorHandler,path,fs,Joi;_204‍.x([["default",()=>_204‍.o]]);_204‍.w("../../models",[["profile",["profile"],function(v){profile=v}]]);_204‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_204‍.w("../../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_204‍.w("path",[["default",["path"],function(v){path=v}]]);_204‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_204‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);






const storage = multer.diskStorage({
    destination: (req, file, cb) => cb(null, 'uploads/'),
    filename: (req, file, cb) => {
        const uniqueName = `${Date.now()}-${Math.round(
            Math.random() * 1e9
        )}${path.extname(file.originalname)}`;
        // 3746674586-836534453.png
        cb(null, uniqueName);
    },
});

const handleMultipartData = multer({
    storage,
    limits: { fileSize: 1000000 * 5 },
}).single('image'); // 5mb

const profileController = {
    async profile(req, res, next) {
        handleMultipartData(req, res, async (err) => {
            if (err) {
                return next(CustomErrorHandler.serverError(err.message));
            }
            const filePath = req.file.path;
            // validation

            const profileSchema = Joi.object({
                name: Joi.string().required(),
                email: Joi.string().required(),
                address: Joi.string().required(), 
                Gendar: Joi.string().required(),
            })

            const { error } = profileSchema.validate(req.body);

             if(error){
                fs.unlink(`${appRoot}/${filePath}`,(err)=>{
                    return next(CustomErrorHandler.serverError(err.message));
                });
                return next(error);
             }


            const { name, email, address,Gendar } = req.body;

            let document;
            try {
                document = await profile.create({
                    name,
                    email,
                    address,
                    Gendar,
                    image: filePath,
                });
            } catch (err) {
                return next(err);
            }
            res.status(201).json(document);
        });
    }
}

_204‍.d(profileController);