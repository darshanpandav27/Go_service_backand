let express,registerController,loginController,userController,profileController,serviceController,auth;_7c0‍.x([["default",()=>_7c0‍.o]]);_7c0‍.w("express",[["default",["express"],function(v){express=v}]]);_7c0‍.w("../controllers/index.js",[["registerController",["registerController"],function(v){registerController=v}],["loginController",["loginController"],function(v){loginController=v}],["userController",["userController"],function(v){userController=v}],["profileController",["profileController"],function(v){profileController=v}],["serviceController",["serviceController"],function(v){serviceController=v}]]);_7c0‍.w("../middlewares/auth.js",[["default",["auth"],function(v){auth=v}]]);
const router = express.Router();



router.post('/register', registerController.register);
router.post('/login', loginController.login);
router.get('/profiledata/:id', auth, userController.me);
router.post('/mapdata',userController.selectoneid);
router.get('/admindata', auth, userController.adminme);
router.post('/profile/:id', auth, profileController.profile);
router.post('/Adminprofile/:id', auth, profileController.Adminprofile);
router.put('/profile/:id', auth, profileController.update);
router.put('/Adminprofileupdate/:id', auth, profileController.Adminprofileupdate);
router.get('/Aboutus', auth ,userController.about);
router.post('/otp/:id',auth,registerController.otp);
router.post('/otpverified/:id',auth,registerController.otpverified);
router.put('/Reotpverified/:id',auth,registerController.Reotpverified);
router.post('/servicedata',auth,serviceController.service);
router.post('/allservicedata',auth,serviceController.allservice);
router.post('/payment',auth,serviceController.addservice);
router.get('/user/:id', auth, userController.fulldata);







_7c0‍.d(router);