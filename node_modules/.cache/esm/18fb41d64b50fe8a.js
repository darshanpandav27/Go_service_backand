let User,CustomErrorHandler,aboutSchema;_4b5‍.x([["default",()=>_4b5‍.o]]);_4b5‍.w("../../models",[["User",["User"],function(v){User=v}]]);_4b5‍.w("../../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_4b5‍.w("../../validators/about",[["default",["aboutSchema"],function(v){aboutSchema=v}]]);



const userController = {
    async me(req, res, next) {
        try {
            const user = await User.findOne({ _id: req.user._id }).select('-password -updatedAt -__v');
            if (!user) {
                return next(CustomErrorHandler.notFound());
            }
            res.json(user);
        } catch(err) {
           return next(err);
        }
    },
    async about(req,res,next){
        res.status(201).json({
            status:true,
           data: aboutSchema,
           massage:"successfully"
        })
    }
};

_4b5‍.d(userController);